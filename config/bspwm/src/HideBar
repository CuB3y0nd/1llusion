#!/usr/bin/env bash

read -r current_rice <"$HOME"/.config/bspwm/.rice
THEME_CONFIG="$HOME/.config/bspwm/rices/$current_rice/theme-config.bash"

get_padding() {
  local padding_type=$1
  local var_name="${padding_type^^}_PADDING" # Convert to uppercase
  grep "^${var_name}=" "$THEME_CONFIG" | cut -d'"' -f2
}

set_padding() {
  bspc config top_padding "$1"
  bspc config bottom_padding "$2"
  bspc config left_padding "$3"
  bspc config right_padding "$4"
}

is_eww_theme() {
  case "$current_rice" in
  "z0mbi3" | "andrea")
    return 0
    ;;
  *)
    return 1
    ;;
  esac
}

get_eww_config_dir() {
  local base_dir="$HOME/.config/bspwm/rices/$current_rice"
  case "$current_rice" in
  "z0mbi3")
    echo "$base_dir/bar"
    ;;
  "andrea")
    echo "$base_dir/andy"
    ;;
  esac
}

toggle_bar() {
  local action=$1

  if is_eww_theme; then
    local eww_config_dir
    eww_config_dir=$(get_eww_config_dir)

    if [ "$action" = "hide" ]; then
      eww -c "$eww_config_dir" close-all
    else
      local monitors=$(xrandr -q | grep -w 'connected' | sort -k3n | cut -d' ' -f1)
      local count=0
      for m in $monitors; do
        eww -c "$eww_config_dir" open bar --id "$m" --arg monitor="$m" --toggle --screen $count
        count=$((count + 1))
      done
    fi
  else
    polybar-msg cmd "$action"
  fi
}

toggle_bars() {
  if [ "$1" = "hide" ]; then
    set_padding 2 2 2 2
    toggle_bar hide
  else
    set_padding "$(get_padding "top")" "$(get_padding "bottom")" "$(get_padding "left")" "$(get_padding "right")"
    toggle_bar show
  fi
}

case $1 in
-h | --hide)
  toggle_bars hide
  ;;
-u | --unhide)
  toggle_bars unhide
  ;;
*)
  echo "Usage: $0 {-h|--hide|-u|--unhide}"
  ;;
esac
